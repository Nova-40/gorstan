// File: src/engine/introLogic.js
// MIT License
// ¬© 2025 Geoff Webster ‚Äì Gorstan Game Project
// Purpose: Contains logic for Jump, Wait, and Sip actions.


// Gorstan Game Module ‚Äî v2.8.0
// MIT License ¬© 2025 Geoff Webster
// introLogic.js ‚Äî Handles pre-game choices and sets initial room logic

/**
 * handleIntroChoice
 * Handles the player's intro choice and sets up the initial game state.
 * @param {string} choice - The player's choice ("jump", "wait", "sip", etc).
 * @param {function} setStartGame - Callback to trigger the start of the game.
 * @param {function} setStartingRoom - Callback to set the initial room.
 * @param {function} addToOutput - Callback to log output/messages.
 */
export function handleIntroChoice(choice, setStartGame, setStartingRoom, addToOutput) {
  switch (choice) {
    case "jump":
      addToOutput("ü™Ç Player jumped into the portal.");
      setStartingRoom("Control Room 1");
      setStartGame(true);
      break;
    case "wait":
      addToOutput("‚è≥ Player waited. Multiverse rebooted.");
      setStartingRoom("introreset");
      setStartGame(true);
      break;
    case "sip":
      addToOutput("‚òï Player sipped the Gorstan coffee. Something‚Ä¶ shifted.");
      setStartingRoom("latticeroom");
      setStartGame(true);
      break;
    default:
      // Defensive: fallback for unknown choices
      addToOutput(`‚ùì Unknown choice: ${choice}`);
      setStartingRoom("Control Room 1");
      setStartGame(true);
  }
}

/*
Review summary:
- ‚úÖ Syntax is correct and all logic is preserved.
- ‚úÖ No unused or broken imports.
- ‚úÖ Function is documented and named descriptively.
- ‚úÖ Comments clarify intent and behaviour.
- ‚úÖ Module is ready for build and production integration.
*/
